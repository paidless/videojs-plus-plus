{"version":3,"file":"extra-fullwindow-toggle.es.js","sources":["../../../source/Utils/Promise.js","../../../source/Plugin/ExtraFullwindowToggle/ExtraFullwindowToggle.js"],"sourcesContent":["\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nexport function isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nexport function silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, (e) => { });\n  }\n}\n","import videojs from 'video.js';\nimport { silencePromise } from '../../Utils/Promise';\nimport './ExtraFullwindowToggle.scss';\n\nconst Button = videojs.getComponent('Button');\n\nclass FullWindowToggle extends Button {\n\n  /**\n   * Create a Full window toggle button instance.\n   *\n   * @param     {Player} player\n   *            A Video.js Player instance.\n   *\n   * @param     {Object} [options]\n   *            An optional options object.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    this.updateButtonState();\n\n    // Patches exitFullscreenHelper\n    // Code from: https://github.com/paidless/videojs-yt-style/blob/7b6f1620b5c925d4a4a602df83b0b58d1b0d5843/src/js/features/fullwindow-toggle-manager.js#L11-L33\n    // Ref: https://github.com/videojs/video.js/blob/9ca2e8764a2cced1efdad730b8c66c4b42a33f7f/src/js/player.js#L2976-L2992\n    player.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n      if (this.isFullWindow) {\n        return this.exitFullWindow();\n      }\n  \n      if (this.fsApi_.requestFullscreen) {\n        const promise = document[this.fsApi_.exitFullscreen]();\n  \n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(function() {\n            return this.isFullscreen(false);\n          }));\n        }\n  \n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    };\n\n    const events = ['enterFullWindow', 'exitFullWindow', 'fullscreenchange'];\n    const handleFullWindowChange = (event) => {\n      this.updateButtonState.call(this);\n\n      if (!this.player_.isFullscreen()) {\n        this.show();\n      } else {\n        this.hide();\n      }\n\n      if (event.type !== 'fullscreenchange') {\n        const fullscreenToggle = this.getFullscreenToggle();\n        if (fullscreenToggle) {\n          fullscreenToggle.handleFullscreenChange();\n        }\n\n        player.trigger('fullwindowchange');\n      }\n    }\n\n    player.on(events, handleFullWindowChange);\n    player.on('dispose', () => {\n      player.off(events, handleFullWindowChange);\n    });\n  }\n\n  getFullscreenToggle() {\n    const findComponents = this.player_.findChild('fullscreenToggle');\n\n    if (findComponents.length > 0) {\n      return findComponents[0].component;\n    }\n  }\n\n  /**\n   * Set button css class.\n   *\n   * @return    {string}\n   *            Return css class.\n   */\n  buildCSSClass() {\n    return `vjs-fullwindow-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Button click handle.\n   *\n   * \n   * @param     {Object} [event]\n   *            Event data.\n   */\n  handleClick(event) {\n    if (!this.player_.isFullWindow) {\n      this.player_.enterFullWindow();\n    } else {\n      this.player_.exitFullWindow();\n    }\n\n    this.updateButtonState();\n  }\n\n  /**\n   * Button state update.\n   */\n  updateButtonState() {\n    if (!this.player_.isFullWindow) {\n      this.controlText('Fullwindow');\n    } else {\n      this.controlText('Exit Fullwindow');\n    }\n  }\n}\n\nvideojs.registerComponent('FullWindowToggle', FullWindowToggle);\n\nconst controlBarChildren = videojs.getComponent('ControlBar').prototype.options_\n  .children;\nconst fullScreenButtonIndex = controlBarChildren.indexOf('FullscreenToggle');\n\ncontrolBarChildren.splice(fullScreenButtonIndex, 0, 'FullWindowToggle');\n"],"names":["isPromise","value","undefined","then","silencePromise","e","Button","videojs","getComponent","FullWindowToggle","player","options","updateButtonState","exitFullscreenHelper_","isFullWindow","exitFullWindow","fsApi_","requestFullscreen","promise","document","exitFullscreen","isFullscreen","tech_","supportsFullScreen","options_","preferFullWindow","techCall_","events","handleFullWindowChange","event","call","player_","show","hide","type","fullscreenToggle","getFullscreenToggle","handleFullscreenChange","trigger","on","off","findComponents","findChild","length","component","buildCSSClass","handleClick","enterFullWindow","controlText","registerComponent","controlBarChildren","prototype","children","fullScreenButtonIndex","indexOf","splice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,SAAOA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAAjC,IAAyC,OAAOA,KAAK,CAACE,IAAb,KAAsB,UAAtE;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,cAAT,CAAwBH,KAAxB,EAA+B;AACpC,MAAID,SAAS,CAACC,KAAD,CAAb,EAAsB;AACpBA,IAAAA,KAAK,CAACE,IAAN,CAAW,IAAX,EAAiB,UAACE,CAAD,EAAO,EAAxB;AACD;AACF;;ACvBD,IAAMC,MAAM,GAAGC,OAAO,CAACC,YAAR,CAAqB,QAArB,CAAf;;IAEMC;;;AAEJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,4BAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAC3B,+BAAMD,MAAN,EAAcC,OAAd;;AAEA,UAAKC,iBAAL,GAH2B;AAM3B;AACA;;;AACAF,IAAAA,MAAM,CAACG,qBAAP,GAA+B,SAASA,qBAAT,GAAiC;AAC9D,UAAI,KAAKC,YAAT,EAAuB;AACrB,eAAO,KAAKC,cAAL,EAAP;AACD;;AAED,UAAI,KAAKC,MAAL,CAAYC,iBAAhB,EAAmC;AACjC,YAAMC,OAAO,GAAGC,QAAQ,CAAC,KAAKH,MAAL,CAAYI,cAAb,CAAR,EAAhB;;AAEA,YAAIF,OAAJ,EAAa;AACX;AACA;AACAd,UAAAA,cAAc,CAACc,OAAO,CAACf,IAAR,CAAa,YAAW;AACrC,mBAAO,KAAKkB,YAAL,CAAkB,KAAlB,CAAP;AACD,WAFc,CAAD,CAAd;AAGD;;AAED,eAAOH,OAAP;AACD,OAZD,MAYO,IAAI,KAAKI,KAAL,CAAWC,kBAAX,MAAmC,CAAC,KAAKC,QAAL,CAAcC,gBAAf,KAAoC,IAA3E,EAAiF;AACtF,aAAKC,SAAL,CAAe,gBAAf;AACD,OAFM,MAEA;AACL,aAAKX,cAAL;AACD;AACF,KAtBD;;AAwBA,QAAMY,MAAM,GAAG,CAAC,iBAAD,EAAoB,gBAApB,EAAsC,kBAAtC,CAAf;;AACA,QAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;AACxC,YAAKjB,iBAAL,CAAuBkB,IAAvB;;AAEA,UAAI,CAAC,MAAKC,OAAL,CAAaV,YAAb,EAAL,EAAkC;AAChC,cAAKW,IAAL;AACD,OAFD,MAEO;AACL,cAAKC,IAAL;AACD;;AAED,UAAIJ,KAAK,CAACK,IAAN,KAAe,kBAAnB,EAAuC;AACrC,YAAMC,gBAAgB,GAAG,MAAKC,mBAAL,EAAzB;;AACA,YAAID,gBAAJ,EAAsB;AACpBA,UAAAA,gBAAgB,CAACE,sBAAjB;AACD;;AAED3B,QAAAA,MAAM,CAAC4B,OAAP,CAAe,kBAAf;AACD;AACF,KAjBD;;AAmBA5B,IAAAA,MAAM,CAAC6B,EAAP,CAAUZ,MAAV,EAAkBC,sBAAlB;AACAlB,IAAAA,MAAM,CAAC6B,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzB7B,MAAAA,MAAM,CAAC8B,GAAP,CAAWb,MAAX,EAAmBC,sBAAnB;AACD,KAFD;AArD2B;AAwD5B;;;;SAEDQ,sBAAA,+BAAsB;AACpB,QAAMK,cAAc,GAAG,KAAKV,OAAL,CAAaW,SAAb,CAAuB,kBAAvB,CAAvB;;AAEA,QAAID,cAAc,CAACE,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,aAAOF,cAAc,CAAC,CAAD,CAAd,CAAkBG,SAAzB;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;;SACEC,gBAAA,yBAAgB;AACd,yDAAuCA,aAAvC;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;SACEC,cAAA,qBAAYjB,KAAZ,EAAmB;AACjB,QAAI,CAAC,KAAKE,OAAL,CAAajB,YAAlB,EAAgC;AAC9B,WAAKiB,OAAL,CAAagB,eAAb;AACD,KAFD,MAEO;AACL,WAAKhB,OAAL,CAAahB,cAAb;AACD;;AAED,SAAKH,iBAAL;AACD;AAED;AACF;AACA;;;SACEA,oBAAA,6BAAoB;AAClB,QAAI,CAAC,KAAKmB,OAAL,CAAajB,YAAlB,EAAgC;AAC9B,WAAKkC,WAAL,CAAiB,YAAjB;AACD,KAFD,MAEO;AACL,WAAKA,WAAL,CAAiB,iBAAjB;AACD;AACF;;;EAjH4B1C;;AAoH/BC,OAAO,CAAC0C,iBAAR,CAA0B,kBAA1B,EAA8CxC,gBAA9C;AAEA,IAAMyC,kBAAkB,GAAG3C,OAAO,CAACC,YAAR,CAAqB,YAArB,EAAmC2C,SAAnC,CAA6C3B,QAA7C,CACxB4B,QADH;AAEA,IAAMC,qBAAqB,GAAGH,kBAAkB,CAACI,OAAnB,CAA2B,kBAA3B,CAA9B;AAEAJ,kBAAkB,CAACK,MAAnB,CAA0BF,qBAA1B,EAAiD,CAAjD,EAAoD,kBAApD"}